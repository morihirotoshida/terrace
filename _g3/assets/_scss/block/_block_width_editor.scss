/**
Editor width control
*/

//////////////////////////////////////////////////////////////
/// Variable Setting
//////////////////////////////////////////////////////////////
body{
	--vk-width-editor-sidebar:0px; // Be aware that calc cannot calculate if there is no unit.
	--vk-width-editor-leftmenu:0px; // Be aware that calc cannot calculate if there is no unit.
	--vk-width-editor-list-view-sidebar:0px; // Be aware that calc cannot calculate if there is no unit.
	// full
	--vk-width-full:calc( 100svw - var(--vk-width-editor-sidebar) - var(--vk-width-editor-leftmenu) - var(--vk-width-editor-list-view-sidebar) );
	// body
	--vk-width-editor-container-body: calc( var(--vk-width-full) * 0.8 );
	--vk-width-contaner: var(--vk-width-editor-container-body);
	--wp--style--global--content-size: var(--vk-width-editor-container-body);
	// wide
	--vk-width-editor-wide: calc( var(--vk-width-editor-container-body) + ( var(--vk-width-full) - var(--vk-width-editor-container-body) ) / 2 );
}

//  In case the left sidebar is open ( not full screen mode )
body:where(:not(.is-fullscreen-mode)) {
	--vk-width-editor-leftmenu:160px;
	&.folded {
		--vk-width-editor-leftmenu:36px;
	}
}

// In case the right sidebar is open
body:has(.is-sidebar-opened), // WP6.5.5まで
body:has(.editor-sidebar) // after WP6.6
{
	--vk-width-editor-sidebar:280px;
}

// In case the block list view is open
body:has(.interface-interface-skeleton__secondary-sidebar) {
	--vk-width-editor-list-view-sidebar:350px;
}

//////////////////////////////////////////////////////////////
/// モバイル / タブレット専用補正
//////////////////////////////////////////////////////////////
body.block-editor-iframe__body.editor-styles-wrapper{
	// タブレット / モバイル の場合はサイドパネルの幅の変数の値を0にする
	--vk-width-editor-sidebar:0px;
	--vk-width-editor-leftmenu:0px;
	--vk-width-editor-list-view-sidebar:0px;
	// --vk-width-container: var(--vk-width-editor-container-body);
	div:is(
		[data-align="full"], 
		.alignfull,
		.wp-block-vk-blocks-outer.vk_outer.vk_outer-width-full.vk_outer-paddingLR-zero
	) {
		width: var(--vk-width-full);
		max-width: var(--vk-width-full);
	}
	div:is(
		[data-align="wide"],
		.alignwide
	) {
		width: var(--vk-width-editor-wide);
		max-width: var(--vk-width-editor-wide);
	}
	:is(
		.is-root-container,
		.is-layout-constrained
	) {
		--vk-width-container: var(--vk-width-editor-container-body);
		& > div:is(
			[data-align="full"], 
			.alignfull,
			.wp-block-vk-blocks-outer.vk_outer.vk_outer-width-full.vk_outer-paddingLR-zero
		) {
			margin-left:calc( ( var(--vk-width-editor-container-body) - var(--vk-width-full) ) / 2 ) !important;
		}
		& > div:is(
			[data-align="wide"], 
			.alignwide
		) {
			margin-left:calc( ( var(--vk-width-editor-container-body) - var(--vk-width-full) ) / 4 ) !important;
		}
	}
}

//////////////////////////////////////////////////////////////
/// full & wide
//////////////////////////////////////////////////////////////

[data-align=full] {
	&,
	& > div:where(:not(.is-layout-constrained)) { // 編集画面で data-align の内側に div が追加されてしまうため、内側の div にも指定しないと幅指定が効かない
		width:var(--vk-width-full);
	}
	div {
		max-width:var(--vk-width-full);
	}
}

[data-align=wide] {
	margin-left:auto;
	margin-right:auto;
	width:var(--vk-width-editor-wide);
	html &,
	& > div {
		width:var(--vk-width-editor-wide);
		max-width:var(--vk-width-editor-wide);
	}
	div:where(:not(.is-layout-constrained)) {
		max-width:var(--vk-width-editor-wide);
	}
}

// overwright max-width: calc(var(--vk-width-container) - var(--vk-width-container-padding)* 2);
:is( .alignfull, .alignwide ) div[class*=__inner-container] {
    max-width: var(--vk-width-editor-container-body);
}

//////////////////////////////////////////////////////////////
/// .is-layout-constrained の幅の制御
//////////////////////////////////////////////////////////////
.editor-styles-wrapper {
	.is-layout-constrained > :where(:not(.alignleft):not(.alignright):not(.alignfull)) {
		// for theme.json non-active
		max-width:var(--vk-width-editor-container-body);
		// for theme.json active
		--wp--style--global--content-size: var(--vk-width-editor-container-body);
	}
	:is(
		.is-root-container,
		.is-layout-constrained,
		:is(
			.alignfull,
			.alignwide,
			[data-align=full],
			[data-align=wide]
		) div[class*="__inner-container"]
	) {
		max-width:var(--vk-width-editor-container-body);
		margin-left:auto;
		margin-right:auto;
		--vk-width-container: var(--vk-width-editor-container-body);
		// 通常幅の中の全幅
		& > :is( 
			.alignfull, 
			[data-align=full] 
		) {
			margin-left: calc( ( var(--vk-width-editor-container-body) - var(--vk-width-full) ) / 2 ) !important;
			margin-right: calc( ( var(--vk-width-editor-container-body) - var(--vk-width-full) ) / 2 ) !important;
		}
		// 通常幅の中の幅広
		// 標準だと通常幅の中の幅広や全幅は強制的に通常幅にされるので、されるので、上書き
		& > :is( 
			.alignwide, 
			[data-align=wide] 
		) {
			width: var(--vk-width-editor-wide);
			max-width: var(--vk-width-editor-wide);
			margin-left: calc( ( var(--vk-width-editor-container-body) - var(--vk-width-full) ) / 4 ) !important;
			margin-right: calc( ( var(--vk-width-editor-container-body) - var(--vk-width-full) ) / 4 ) !important;
		}
	}
}

// .is-layout-constrained {
// 	margin-left: auto !important;
// 	margin-right:auto !important;
// }
.wp-block.editor-post-title {
	max-width:var(--vk-width-editor-container-body);
}
.edit-post-visual-editor__content-area .editor-styles-wrapper .edit-post-visual-editor__post-title-wrapper > *, 
.edit-post-visual-editor__content-area .editor-styles-wrapper .block-editor-block-list__layout.is-root-container > * {
	width:var(--vk-width-editor-container-body);
	max-width:var(--vk-width-editor-container-body);
	margin-left:auto;
	margin-right:auto;
}

.editor-styles-wrapper .is-root-container {
	> .wp-block {
		// 6.0 / theme.json あり / Evergreen のオフセット背景の時に左によってしまうため
		margin-left:auto;
		margin-right:auto;
	}
}

.container {
	padding:0;
	max-width:var(--vk-width-editor-container-body);
	@media (min-width: 576px) {
		max-width:var(--vk-width-editor-container-body);
	}
	@media (min-width: 768px) {
		max-width:var(--vk-width-editor-container-body);
	}
	@media (min-width: 992px){
		max-width:var(--vk-width-editor-container-body);
	}
	@media (min-width: 1200px) {
		max-width:var(--vk-width-editor-container-body);
	}
}

//////////////////////////////////////////////////////////////
// overwright classic.css
//////////////////////////////////////////////////////////////
html :where(.wp-block) {
	// theme.json がない場合（？）に classic.css が 850px を指定してくるので上書きする
	max-width: unset;
}
